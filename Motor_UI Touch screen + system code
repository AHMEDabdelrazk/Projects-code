#if 1

#include <Adafruit_GFX.h>
#include <MCUFRIEND_kbv.h>
MCUFRIEND_kbv tft;
#include <TouchScreen.h>
//#define MINPRESSURE 10
//#define MAXPRESSURE 1000

// ALL Touch panels and wiring is DIFFERENT
// copy-paste results from TouchScreen_Calibr_native.ino

#define YP A2  
#define XM A3 
#define YM 8   
#define XP 9   


#define TS_MINX 125
#define TS_MINY 85
#define TS_MAXX 965
#define TS_MAXY 905

TouchScreen ts = TouchScreen(XP, YP, XM, YM, 300);


#define LCD_CS A3
#define LCD_CD A2
#define LCD_WR A1
#define LCD_RD A0

#define LCD_RESET A4

#define BLACK   0x0000
#define BLUE    0x001F
#define RED     0xF800
#define GREEN   0x07E0
#define CYAN    0x07FF
#define MAGENTA 0xF81F
#define YELLOW  0xFFE0
#define WHITE   0xFFFF

#define MINPRESSURE 1
#define MAXPRESSURE 100000

//Adafruit_TFTLCD tft(LCD_CS, LCD_CD, LCD_WR, LCD_RD, LCD_RESET);

String Key[4][4] = {
  {"7","8","9","A"},
  {"4","5","6","M"},
  {"1","2","3","C"},
  {"R","0","E","D"}
};


  /*||||||||||||||||||||||  init   ||||||||||||||||||||||||||||||||||*/
bool flg = 0 , f1=0 , f2=0 , sys = 0 ,frq_2 = 0 , frq_1 = 0 , rep = 0 , rest = 0 , stat=0;
int FRQ2 = 0 ,FRQ1 = 0 , REP = 0 , FLAG = 0;
uint32_t tim1 = 1000 , tim2 = 100 ;
const int ld = 13 ;
  /*||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||*/

  

String N1, N2, ShowSC, opt;
bool updata=false;
float answers=-1;

void setup() {
 pinMode(ld,OUTPUT);
 Serial.begin(9600);
 tft.reset();
 uint16_t ID = tft.readID();
 if (ID == 0xD3D3) ID = 0x9486; // write-only shield
 tft.begin(ID);
 tft.setRotation(0);   
 tft.fillScreen(WHITE);

 tft.fillRect(0, 80, 240, 240, WHITE);
 tft.drawFastHLine(0, 80, 240, BLACK);
 tft.drawFastHLine(0, 140, 240, BLACK);
 tft.drawFastHLine(0, 200, 240, BLACK);
 tft.drawFastHLine(0, 260, 240, BLACK);
 tft.drawFastHLine(0, 320-1, 240, BLACK);

 
 tft.drawFastVLine(0, 80, 240, BLACK);
 tft.drawFastVLine(60, 80, 240, BLACK);
 tft.drawFastVLine(120, 80, 240, BLACK);
 tft.drawFastVLine(180, 80, 240, BLACK);
 tft.drawFastVLine(240-1, 80, 240, BLACK);

 for(int y=0;y<4;y++){
  for(int x=0;x<4;x++){
    tft.setCursor(22 + (60*x), 100 + (60*y));
    tft.setTextSize(3);
    tft.setTextColor(BLACK);
    tft.println(Key[y][x]);
  }
 }
 tft.fillRect(0, 0, 240, 80, BLACK);
 tft.setCursor(10, 10);
 tft.setTextSize(2);    
 tft.setTextColor(GREEN);
 tft.print("press M or A");  
}

char coun = 'O';
void loop() {
   TSPoint p = waitTouch(); 
   //CLR();
   
   if(p.x<730&&p.x>590&&p.y<900&&p.y>740)coun = '7';   
   else if(p.x<730&&p.x>590&&p.y<740&&p.y>550)coun = '8';
   else if(p.x<730&&p.x>590&&p.y<550&&p.y>350)coun = '9';
   else if(p.x<730&&p.x>590&&p.y<350&&p.y>160)coun = 'A';
   else if(p.x<590&&p.x>440&&p.y<900&&p.y>740)coun = '4';   
   else if(p.x<590&&p.x>440&&p.y<740&&p.y>550)coun = '5';
   else if(p.x<590&&p.x>440&&p.y<550&&p.y>350)coun = '6';
   else if(p.x<590&&p.x>440&&p.y<350&&p.y>160)coun = 'M';
   else if(p.x<440&&p.x>290&&p.y<900&&p.y>740)coun = '1';   
   else if(p.x<440&&p.x>290&&p.y<740&&p.y>550)coun = '2';
   else if(p.x<440&&p.x>290&&p.y<550&&p.y>350)coun = '3';
   else if(p.x<440&&p.x>290&&p.y<350&&p.y>160)coun = 'C';
   else if(p.x<290&&p.x>140&&p.y<900&&p.y>740)coun = 'R';   
   else if(p.x<290&&p.x>140&&p.y<740&&p.y>550)coun = '0';
   else if(p.x<290&&p.x>140&&p.y<550&&p.y>350)coun = 'E';
   else if(p.x<290&&p.x>140&&p.y<350&&p.y>160)coun = 'D';
   
   if(coun!='O'||FLAG)
     control(coun);
   coun = 'O';
   delay(300);

}

TSPoint waitTouch(){
  TSPoint p;
  p = ts.getPoint();
  pinMode(XM, OUTPUT);
  pinMode(YP, OUTPUT);
  return p;
}

void CLR(){
 tft.fillRect(0, 0, 240, 80, BLACK);
 tft.setCursor(10, 10);
 tft.setTextSize(2);    
 tft.setTextColor(GREEN);
}

void control(char myKey) {
  /*||||||||||||||||||||||  REST  ||||||||||||||||||||||||||||||||||*/
  if(rest){
    rest = 0;
    flg = 0 , f1=0 , f2=0 ,sys = 0 , frq_2 = 0,stat = 0 , frq_1 = 0 , rep = 0 , rest = 0;
    tim1 = 100 , tim2 = 100 ;
    FRQ1 = 0 , REP = 0 , FRQ2 = 0 , FLAG = 0;
    digitalWrite(ld, LOW);
    CLR();
    tft.print("press M or A");  
  } 
  /*||||||||||||||||||||||  REST  ||||||||||||||||||||||||||||||||||*/
  
  
  Serial.println(time1); // for debuging & traking the isu
  
  
  
  /////////////////////////////////// take key ///////////////////////////////////////////////////////////
  if(myKey=='R')
     rest = 1;
  else if (!flg) {           //check condition
    //     M    0     //
    if(myKey=='M'&&!flg){           // if user want Manual
      sys=0;
      flg=1;
      CLR();
      tft.print("press D or C");
    } //   A    0     //
    else if(myKey=='A'&&!flg){      // if user want an auto updoun
      sys=1;
      FLAG = 1;
      flg=1;
      CLR();
      tft.print("enter X press #");
      }
    Serial.println(myKey);//print key 
    //////////////////////////////////////////////////////////////////////////////////////////////////////////
  } //    1     0     1            // the program is set to work manually 1 //////////////////////////////////
  else if(!sys&&flg){
    if(myKey=='U'){    
       digitalWrite(ld, HIGH);
    }
    else if(myKey=='D'){       
       digitalWrite(ld, LOW);
    }  
     Serial.println(myKey);//print key 
     ///////////////////////////////////////////////////////////////////////////////////////////////////////////
  } //    1      1     1    0     // the prog is set to Auto 2 /////////////////////////////////////////////////
  else if(myKey&&sys&&flg&&!rep){
      if(myKey=='E'&&!rep&&!frq_1&&!frq_2&&FRQ1>0){
        frq_1=1;
        CLR();
        tft.print("enter Y press #");
      }
      else if(myKey=='E'&&!rep&&!frq_2&&frq_1&&FRQ2>0){
        frq_2=1;
        CLR();
        tft.print("enter Z press #");
      }
      else if(myKey=='E'&&!rep&&frq_1&&REP>0){
        rep=1;
        CLR();
        /////////////////////////////////////////////////////////////////////////////////////////////////////////
      }///////////////////////////////////// take X  Y  Z ///////////////////////////////////////////////////////
      else if(myKey<='9'&&myKey>='0'&&!frq_1&&FRQ1<=100){
        FRQ1 = min(100,(FRQ1*10)+((int)(myKey)-48));
        CLR();
        Serial.println(myKey);//print key 
        tft.print("enter X ");
        tft.print(FRQ1);
        tft.print(" press #");
      }
      else if(myKey<='9'&&myKey>='0'&&!frq_2&&FRQ2<=100){
        FRQ2 = min(100,(FRQ2*10)+((int)(myKey)-48));
        CLR();
        Serial.println(myKey);//print key 
        tft.print("enter Y ");
        tft.print(FRQ2);
        tft.print(" press #");
      }
      else if(myKey<='9'&&myKey>='0'&&frq_1&&frq_2&&!rep&&REP<=100){
        REP = min(100,(REP*10)+((int)(myKey)-48));
        CLR();
        tft.print("enter Z ");
        tft.print(REP);
        tim1=4*REP;
        tft.print(" press #");
      }
      ////////////////////////////////////////////////////////////////////////////////////////////////////////////
  } //  1     1    1    1    // construct loop in Auto mode 1 ////////////////////////////////////////////////////
  else if(rep&&frq_1){
            Serial.println(tim1);
          
          if(!f1&&!f2){  ////////////////////////// mode 1 ///////////////////////////////////////////////////////
             digitalWrite(ld, HIGH);
             CLR();
             tft.print("   ");
             FRQ1--;
             tft.print(FRQ1);
             f1=1,f2=0;
             }
          else if(f2&&f1){ //////////////////////// mode 2 ////////////////////////////////////////////////////////
            Serial.println("lol");
            digitalWrite(ld, LOW);
            f1=0,f2=1;
          }
          else if(tim1)//////////////////////////// timer  ////////////////////////////////////////////////////////
             tim1--;
          else if(FRQ1){
            Serial.println(FRQ1);
            if(f1&&!f2)
              f2=1,f1=1;
            else 
              f1=0,f2=0;
            Serial.println(f1);
            Serial.println(f2);
            if(stat)
            stat=0,tim1=4*REP;
            else stat=1,tim1=4*FRQ2 ;
          }   
        //////////////////////////////////////////////////////////////////////////////////////////////////////////
       ///////////////////////////////////// end of Auto loop /////////////////////////////////////////////////////
  }
}















#endif
